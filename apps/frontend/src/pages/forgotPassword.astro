---
import LayoutLogin from "../layouts/LayoutLogin.astro";
---

<LayoutLogin>
    <main class="main-login">
        <section class="login-section contenedor">
            <h2 class="section-title">recuperar contraseña</h2>
            <form id="forgot-password-form" class="forgot-password-form">
                <h4>Por favor ingresa el correo electrónico con el cual te registraste en sonrisa Perfecta.</h4>
                <h3>Se te enviara un correo de recuperación.</h3>
                <div class="form-group">
                    <i class='bx bx-envelope' ></i>
                    <input type="email" id="email" name="email" class="email" placeholder="ejemplo@gmail.com" required>
                </div>
                <div class="container-url">
                <button type="submit" onclick="window.location.href='/login'" class="btn btn-primario">cancelar</button>
                <button type="submit" id="submit-button" class="submit-button">recuperar contraseña</button>
                </div>
            </form>
        </section>
    </main>
</LayoutLogin>

<style>
    :root {
  --purplee: #9d15e6;
  --lightpurplee: #b24fe8;
  --superlightpurplee: #d396f4;
  --gray: #55557b;
  --white: #fff;
  --black: rgb(0, 0, 0);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'poppins', sans-serif;
}

body {
  background: url('/src/assets/fondoLogin.jpg');
  align-items: center;
  justify-content: center;
  height: 100vh;
  background-size: cover;
  background-position: center;
}

.form-group{
    display: flex;
    flex-direction: column;
    text-align: left;
    position: relative; /* Base para el posicionamiento absoluto del icono */
}

.form-group i {
    position: absolute; /* Posiciona el icono respecto al .form-group */
    left: 15px; /* Espacio desde la izquierda */
    top: 50%; /* Centra verticalmente */
    transform: translateY(-50%);
}

h2{
    font-size: 2.3rem;
    margin: 20px;
}

h3 {
    font-size: 1rem;
}

h4 {
    font-size: 1rem;
}

.main-login {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: calc(100vh - 70px - 80px); /* Altura de la vista - header - footer */
    padding: 40px 0;
    width: 100%;
    flex-direction: column;
}

.login-section {
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    max-width: 550px; /* Un poco más estrecho que el de registro */
    width: 100%;
    text-align: center;
    border: solid 1px #9c9ccb59;
    height: 400px;
    backdrop-filter: blur(20px);
}

.login-section .section-title {
    margin-bottom: 20px;
    font-size: 2.2rem;
}

.forgot-password-form {
    display: grid;
    gap: 20px;
}

.forgot-password-form .btn-primario {
    width: auto;
    padding: 12px 30px;
    font-size: 1.1rem;
    cursor: pointer;
    background: #ce9bdbc9;
    border-radius: 8px;
    border: solid 2px black;
    transition: background-color 0.3s ease, color 0.3s ease;
}

.forgot-password-form .btn-primario:hover {
    background-color: #cf89e2;
    color: rgb(0, 0, 0);
}

.forgot-password-form .submit-button {
    width: auto;
    padding: 12px 30px;
    font-size: 1.1rem;
    cursor: pointer;
    border-radius: 8px;
    background: #4a55c6bd;
    border: solid 2px black;
    transition: background-color 0.3s ease, color 0.3s ease;
}

.forgot-password-form .submit-button:hover {
    background-color: #3945c5;
    color: rgb(0, 0, 0);
}

.email {
    height: 40px;
    border-radius: 6px;
    border: solid 1px black;
    background: transparent;
    width: 100%;
    padding: 12px 20px 12px 45px;
    box-sizing: border-box;
    outline: none;
}

.email::placeholder {
  color: black; /* Cambia "red" por el color que desees */
}

/* Responsive para el formulario de login */
@media (max-width: 768px) {
    .main-login {
        min-height: calc(100vh - 180px); /* Ajusta si el header/footer mobile son más altos */
        padding: 20px 0;
    }

    .login-section {
        margin: 0 15px; /* Margen a los lados en pantallas pequeñas */
        padding: 30px 20px;
    }

    .login-section .section-title {
        font-size: 1.8rem;
        margin-bottom: 25px;
    }

    .forgot-password-form .btn-primario {
        padding: 10px 20px;
        font-size: 1rem;
    }
}
</style>

<script>
    // @ts-nocheck
    import { BACK_ENDPOINT } from "../config/endpoints";
    import { createNotification } from "../features/notifications/notificiation";
    import ky from 'ky';

    // DOM Element Selection
    // Renombramos los selectores para que reflejen el nuevo propósito
    const form = document.querySelector('#forgot-password-form');
    const emailInput = document.querySelector('#email');
    const submitButton = document.querySelector('#submit-button');

    // Validation Regular Expressions
    const emailRegex = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/;

    // Validation State
    const validationState = {
        isEmailValid: false,
    };

    // Helper Function to Update Input Visuals (Sin cambios)
    function updateInputValidationUI(inputElement, isValid) {
        if (isValid) {
            inputElement.classList.remove('border-red-500', 'dark:border-red-500');
            inputElement.classList.add('border-green-500', 'dark:border-green-500');
        } else {
            inputElement.classList.remove('border-green-500', 'dark:border-green-500');
            inputElement.classList.add('border-red-500', 'dark:border-red-500');
        }
        if (inputElement.value === '') {
            inputElement.classList.remove('border-red-500', 'dark:border-red-500', 'border-green-500', 'dark:border-green-500');
        }
    }

    // Master Validation Function
    function validateForm() {
        // Solo validamos el email
        const { isEmailValid } = validationState;
        submitButton.disabled = !isEmailValid;
    }

    // Event Listener for Real-time Validation
    emailInput.addEventListener('input', () => {
        const isValid = emailRegex.test(emailInput.value);
        validationState.isEmailValid = isValid;
        updateInputValidationUI(emailInput, isValid);
        validateForm();
    });

form.addEventListener('submit', async (event) => {
    event.preventDefault();
    const { isEmailValid } = validationState;
    if (!isEmailValid) return;

    try {
        await ky.post(`${BACK_ENDPOINT}/api/email`, {json: { email: emailInput.value}});
        for (const key in validationState) {
        validationState[key] = false;
      }
      form.reset();
      [emailInput, passwordInput, verifyPasswordInput].forEach(input => {
        updateInputValidationUI(input);
      });

        validationState.isEmailValid = false;
        form.reset();
        updateInputValidationUI(emailInput);
        validateForm();
        createNotification({
            title: 'Correo enviado!',
            description: 'Revisa tu bandeja de entrada para restablecer tu contraseña.',
            type: 'success'
        });
    } catch (error) {
        let errorMessage = 'No se pudo enviar el correo de recuperación.';

        // Comprobamos si hay una respuesta y si es del tipo que esperamos
        if (error.response) {
            const contentType = error.response.headers.get('content-type');
            
            if (contentType && contentType.includes('application/json')) {
                // Si la respuesta es JSON, la parseamos para obtener el mensaje de error específico
                const errorData = await error.response.json();
                errorMessage = errorData.error ?? errorMessage;
            } else {
                // Si la respuesta no es JSON (probablemente HTML), usamos un mensaje genérico
                errorMessage = 'El servidor respondió con un error inesperado. Por favor, inténtalo de nuevo más tarde.';
                // Opcional: Para depurar, puedes imprimir el texto de la respuesta HTML
                // console.error('Respuesta del servidor:', await error.response.text());
            }
        }

        createNotification({
            title: 'Ups! Hubo un error',
            description: errorMessage,
            type: 'error'
        });
    }
});
</script>